
** sample ExportOptions.plist 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>method</key>
  <string>development</string>
  <key>teamID</key>
  <string>XXXXXXXXXX</string>
  <key>uploadBitcode</key>
  <true/>
  <key>compileBitcode</key>
  <true/>
  <key>uploadSymbols</key>
  <true/>
  <key>signingStyle</key>
  <string>manual</string>
  <key>signingCertificate</key>
  <string>iOS Development: email(ID)</string>
  <key>provisioningProfiles</key>
  <dict>
    <key>com.sample.appname</key>
    <string>******UUID of provisioning profile*******</string>
    <key>com.sample.appname.extension</key>
    <string>******UUID of extension provisioning profile*******</string>
  </dict>
</dict>
</plist>


** Jenkinsfile commands for sample iOS app

slather coverage -x --output-directory test-reports --build-directory Build --scheme ios-sample-app-demo --workspace ios-sample-app-demo.xcodeproj/project.xcworkspace  --show "ios-sample-app-demo.xcodeproj"

cobertura(coberturaReportFile: 'test-reports/cobertura.xml', classCoverageTargets: 'test-reports')

sh 'swiftlint --config .swiftlint.yml --reporter html >> report.html'

publishHTML([
			allowMissing: false,
			alwaysLinkToLastBuild: false,
			keepAll: true,
			reportDir: '.',
			reportFiles: 'report.html',
			reportTitles: "Swiftlint Report",
			reportName: "Swiftlint Report"
			])

junit(testResults: '**/reports/junit.xml', allowEmptyResults: true)

